<div class='side-pages'>
  <% if current_user %>
    <h3>Get started by making a new note.</h3>
    <%= form_for :note, url: notes_path do |f| %>
      <div>
        <%= f.text_field :title, placeholder: 'title', autofocus: true %>
      </div>
      <div>
        <%= f.hidden_field :user_id, value: current_user.id %>
      </div>
      <div>
        <%= button_tag class: "btn-floating btn waves-effect waves-light yellow", title: 'submit' do %>
          <i class='large material-icons'>done</i>
        <% end %>
      </div>
    <% end %>
  <% else %>
    <h4>Login or register to start making a note.</h4>

    <div>
      <div id="player"></div>
    </div>

    <script>
      var tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: "eIMmXDWbhLw",
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>
  <% end %>
</div>
